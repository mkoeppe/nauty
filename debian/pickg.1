.TH PICKG "1" "May 2009" "nauty 2.4" "User Commands"
.SH NAME
pickg \- countg : Count graphs according to their properties.
.SH SYNOPSIS
.B [pickg|countg]
[\fI\-fp#:#q \-V\fR] [\fI\--keys\fR] [\fI\-constraints \-v\fR] [\fIifile \fR[\fIofile\fR]]
.SH DESCRIPTION
.IP
countg : Count graphs according to their properties.
.IP
pickg : Select graphs according to their properties.
.IP
ifile, ofile : Input and output files.
.IP
\&'\-' and missing names imply stdin and stdout.
.IP
Miscellaneous switches:
.TP
\fB\-p\fR# \fB\-p\fR#:#
Specify range of input lines (first is 1)
.TP
\fB\-f\fR
With \fB\-p\fR, assume input lines of fixed length
(only used with a file in graph6 format)
.TP
\fB\-v\fR
Negate all constraints
.TP
\fB\-V\fR
List properties of every input matching constraints.
.TP
\fB\-q\fR
Suppress informative output.
.IP
Constraints:
.IP
Numerical constraints (shown here with following #) can take
a single integer value, or a range like #:#, #:, or :#.  Each
can also be preceded by '~', which negates it.   (For example,
\-~D2:4 will match any maximum degree which is _not_ 2, 3, or 4.)
Constraints are applied to all input graphs, and only those
which match all constraints are counted or selected.
.TP
\fB\-n\fR#
number of vertices     \fB\-e\fR#  number of edges
.TP
\fB\-d\fR#
minimum degree         \fB\-D\fR#  maximum degree
.TP
\fB\-r\fR
regular                \fB\-b\fR   bipartite
.TP
\fB\-z\fR#
radius                 \fB\-Z\fR#  diameter
.TP
\fB\-g\fR#
girth (0=acyclic)      \fB\-Y\fR#  total number of cycles
.TP
\fB\-T\fR#
number of triangles
.TP
\fB\-E\fR
Eulerian (all degrees are even, connectivity not required)
.TP
\fB\-a\fR#
group size  \fB\-o\fR# orbits  \fB\-F\fR# fixed points  \fB\-t\fR vertex\-transitive
.TP
\fB\-c\fR#
connectivity (only implemented for 0,1,2).
.TP
\fB\-i\fR#
min common nbrs of adjacent vertices;     \fB\-I\fR# maximum
.TP
\fB\-j\fR#
min common nbrs of non\-adjacent vertices; \fB\-J\fR# maximum
.IP
Sort keys:
.TP
Counts are made for all graphs passing the constraints.
Counts
.IP
are given separately for each combination of values occurring for
the properties listed as sort keys.  A sort key is introduced by
\&'\-\-' and uses one of the letters known as constraints.  These can
be combined:  \fB\-\-n\fR \fB\-\-e\fR  \fB\-\-r\fR  is the same as \fB\-\-ne\fR \fB\-\-r\fR and \fB\-\-ner\fR.
The order of sort keys is significant.
